/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ITLMPack;

import java.awt.Color;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.WindowConstants;
/**
 *
 * @author Marina Nik
 */
public class AttrDialog extends javax.swing.JDialog {

    /**
     * Creates new form AttrDialog
     */
    public AttrDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HeadLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        NameField = new javax.swing.JTextField();
        WarnLabel = new javax.swing.JLabel();
        DataTypeLabel = new javax.swing.JLabel();
        IntervalCheckBox = new javax.swing.JCheckBox();
        UpLimLabel = new javax.swing.JLabel();
        UpLimField = new javax.swing.JTextField();
        DataTypeComboBox = new javax.swing.JComboBox<>();
        ColorFormatLabel = new javax.swing.JLabel();
        LowLimLabel = new javax.swing.JLabel();
        LowLimField = new javax.swing.JTextField();
        ConfirmButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        HeadLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        HeadLabel.setText("Форма стовпця");
        HeadLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        NameLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        NameLabel.setText("Назва стовпця:");

        NameField.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        WarnLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        DataTypeLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        DataTypeLabel.setText("Тип даних:");

        IntervalCheckBox.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        IntervalCheckBox.setText("Інтервальний (тільки для кольору)");

        UpLimLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        UpLimLabel.setText("Верхня межа:");

        UpLimField.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        DataTypeComboBox.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        ColorFormatLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        ColorFormatLabel.setText("Формат вводу кольору: rrr, ggg, bbb");

        LowLimLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        LowLimLabel.setText("Нижня межа:");

        LowLimField.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        ConfirmButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        ConfirmButton.setText("Підтвердити");
        ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmButtonActionPerformed(evt);
            }
        });

        CancelButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        CancelButton.setText("Скасувати");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(NameField)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(NameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(HeadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(WarnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DataTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ColorFormatLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DataTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IntervalCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(UpLimLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LowLimLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(UpLimField)
                            .addComponent(LowLimField, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HeadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(WarnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(UpLimField)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(UpLimLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(IntervalCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(DataTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LowLimField)
                    .addComponent(LowLimLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ColorFormatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DataTypeComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ConfirmButton, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmButtonActionPerformed
        // TODO add your handling code here:
        boolean ready = false;
        boolean setLimits = false;
        String name = NameField.getText();
        String obj = DataTypeComboBox.getSelectedItem().toString();
        Color lowLim = Color.BLACK;
        Color upLim = Color.BLACK;
        String lm = LowLimField.getText();
        String um = UpLimField.getText();
        Attribute a;
        if (obj.equals("Color") && IntervalCheckBox.isSelected()){
            if (lm.isBlank() || um.isBlank()){
                WarnLabel.setText("Обидві межі мають містити значення!");
            }
            else if (lm.matches("^([0-9]+), *([0-9]+), *([0-9]+)$") && um.matches("^([0-9]+), *([0-9]+), *([0-9]+)$")) {
                Pattern p = Pattern.compile("\\d+");
                Matcher m = p.matcher(LowLimField.getText());
                ArrayList<Integer> found = new ArrayList<>();
                while (m.find())
                    found.add(Integer.parseInt(m.group()));
                m = p.matcher(UpLimField.getText());
                ArrayList<Integer> foundU = new ArrayList<>();
                while (m.find())
                    foundU.add(Integer.parseInt(m.group()));
                try{
                    lowLim  = new Color(found.get(0), found.get(1), found.get(2));
                    upLim = new Color(foundU.get(0), foundU.get(1), foundU.get(2));
                    setLimits = true;
                    ready = true;
                }
                catch(Exception ex){
                    WarnLabel.setText("Значення кольорів мають бути в межах від 0 до 255!");
                }
            }
            else{
                WarnLabel.setText("Невірний формат коду кольору!");
            }
        }
        else if (!obj.equals("Color") && IntervalCheckBox.isSelected()){
            WarnLabel.setText("Інтервальним може бути тільки колір!");
        }
        else{
            boolean marker = true;
            for (int i = 0; i < GUI.getBase(dbIndex).getTable(tIndex).attrNum(); i++){
                if (GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(i).name.equals(name)){
                    WarnLabel.setText("Стовпець з такою назвою вже існує!");
                    marker = false;
                    break;
                }
            }
            if (marker)
                ready = true;
            //NEEDED here as well
        }
        
        if (ready && !creat){
            String temp = GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).getTypeEntered();
            if (!temp.equals(obj)){
                WarnLabel.setText("Не можна змінювати тип даних!");
            }
            else if (obj.equals("Color") && IntervalCheckBox.isSelected()){
                if (GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(tNum).isLesser(lowLim, GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(tNum).getUpColVal())){
                    WarnLabel.setText("Нижня межа не може бути більшою за (");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(tNum).getLowColVal().getRed()+ ", ");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(tNum).getLowColVal().getGreen()+ ", ");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(tNum).getLowColVal().getBlue()+ ")");
                }
                else if (GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(tNum).isLesser(upLim, GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(tNum).getLowColVal())){
                    WarnLabel.setText("Верхня межа не може бути меншою за (");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(tNum).getUpColVal().getRed()+ ", ");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(tNum).getUpColVal().getGreen()+ ", ");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(tNum).getUpColVal().getBlue()+ ")");
                }
            }
            else if (setLimits){
                GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).setLowVal(lowLim);
                GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).setUpVal(upLim);
                GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).name = name;
                TGUI.addColumn();
                TGUI.disableGUI(false);
                dispose();
            }
            else{
                GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).setLowVal(null);
                GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).setUpVal(null);
                GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).name = name;
                TGUI.addColumn();
                TGUI.disableGUI(false);
                dispose();
            }
        }
        else if (ready && creat){
            if (setLimits){    
                String resL = String.format("%02x%02x%02x", lowLim.getRed(), lowLim.getGreen(), lowLim.getBlue());
                resL = "#" + resL;
                String resU = String.format("%02x%02x%02x", upLim.getRed(), upLim.getGreen(), upLim.getBlue());
                resU = "#" + resU;
                a = new Attribute(name, obj, tNum, 1, resL, resU);
                GUI.getBase(dbIndex).getTable(tIndex).addAttr(a);
                TGUI.addColumn();
                TGUI.disableGUI(false);
                dispose();
            }
            else{
                a = new Attribute(name, obj, tNum, 0, null, null);
                GUI.getBase(dbIndex).getTable(tIndex).addAttr(a);
                TGUI.addColumn();
                TGUI.disableGUI(false);
                dispose();
            }
        }
    }//GEN-LAST:event_ConfirmButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        // TODO add your handling code here:
        TGUI.disableGUI(false);
        dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(boolean create, int dbInd, int tInd, int index) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttrDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttrDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttrDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttrDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                creat = create;
                dbIndex = dbInd;
                tIndex = tInd;
                tNum = index;
                AttrDialog dialog = new AttrDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                Attribute a = new Attribute("n1", "Integer", 0, 0, null, null);
                int size = a.typeCount();
                for (int i = 0; i < size; i++)
                    DataTypeComboBox.addItem(a.getType(i));
                a = null;
                if (!creat){
                    NameField.setText(GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).name);
                    String n = GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).getTypeEntered();
                    DataTypeComboBox.setSelectedItem(n);
                    if (GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).getLowVal() != null){
                        IntervalCheckBox.setSelected(true);
                        LowLimField.setText("#" + GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).getLowVal());
                        UpLimField.setText("#" + GUI.getBase(dbIndex).getTable(tIndex).getAttr(tNum).getUpVal());
                    }
                }
                dialog.setVisible(true);
            }
        });
    }

    private static boolean creat;
    private static int dbIndex;
    private static int tIndex;
    private static int tNum;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JLabel ColorFormatLabel;
    private javax.swing.JButton ConfirmButton;
    private static javax.swing.JComboBox<String> DataTypeComboBox;
    private javax.swing.JLabel DataTypeLabel;
    private javax.swing.JLabel HeadLabel;
    private static javax.swing.JCheckBox IntervalCheckBox;
    private static javax.swing.JTextField LowLimField;
    private javax.swing.JLabel LowLimLabel;
    private static javax.swing.JTextField NameField;
    private javax.swing.JLabel NameLabel;
    private static javax.swing.JTextField UpLimField;
    private javax.swing.JLabel UpLimLabel;
    private javax.swing.JLabel WarnLabel;
    // End of variables declaration//GEN-END:variables
}
