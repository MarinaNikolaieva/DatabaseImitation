/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ITLMPack;

import java.awt.Color;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.WindowConstants;

/**
 *
 * @author Marina Nik
 */
public class CellDialog extends javax.swing.JDialog {

    /**
     * Creates new form CellDialog
     */
    public CellDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HeadLabel = new javax.swing.JLabel();
        ValueLabel = new javax.swing.JLabel();
        WarnLabel = new javax.swing.JLabel();
        ValueField = new javax.swing.JTextField();
        ConfirmButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        DataTypeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        HeadLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        HeadLabel.setText("Форма клітини");
        HeadLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ValueLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        ValueLabel.setText("Значення:");

        WarnLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        ValueField.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        ConfirmButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        ConfirmButton.setText("Підтвердити");
        ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmButtonActionPerformed(evt);
            }
        });

        CancelButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        CancelButton.setText("Скасувати");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        DataTypeLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        DataTypeLabel.setText("Тип даних: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 235, Short.MAX_VALUE))
                    .addComponent(ValueField)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(HeadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(WarnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DataTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HeadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(DataTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(WarnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ValueField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ConfirmButton, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmButtonActionPerformed
        // TODO add your handling code here:
        WarnLabel.setText("");
        String newVal = ValueField.getText();
        boolean done = false;
        try{
            if (typeEntered.equals("Integer")){
                Integer stI = new Integer(newVal);
                GUI.getBase(dbIndex).getTable(tIndex).getRowInOrder(rIndex).getCell(cIndex).setVal(stI);
                done = true;
            }   
            else if (typeEntered.equals("Double")){
                Double stD = new Double(newVal);
                GUI.getBase(dbIndex).getTable(tIndex).getRowInOrder(rIndex).getCell(cIndex).setVal(stD);
                done = true;
            }
            else if (typeEntered.equals("Boolean")){
                Boolean stB = new Boolean(newVal);
                GUI.getBase(dbIndex).getTable(tIndex).getRowInOrder(rIndex).getCell(cIndex).setVal(stB);
                done = true;
            }
            else if (typeEntered.equals("Color")){
                Pattern p = Pattern.compile("\\d+");
                Matcher m = p.matcher(newVal);
                ArrayList<Integer> found = new ArrayList<>();
                while (m.find())
                    found.add(Integer.parseInt(m.group()));
                Color stCo = new Color(found.get(0), found.get(1), found.get(2));  //This isn't done good
                if (GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).getLowVal() != null){
                    if (GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).isLesser(stCo, GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).getLowColVal())){
                        WarnLabel.setText("Не можна вводити значення менше за (");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).getLowColVal().getRed()+ ", ");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).getLowColVal().getGreen()+ ", ");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).getLowColVal().getBlue()+ ")");
                    }
                    else if (GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).isLesser(GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).getUpColVal(), stCo)){
                        WarnLabel.setText("Не можна вводити значення більше за (");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).getUpColVal().getRed()+ ", ");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).getUpColVal().getGreen()+ ", ");
                        WarnLabel.setText(WarnLabel.getText() + GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).getUpColVal().getBlue()+ ")");
                    }
                    else{
                        GUI.getBase(dbIndex).getTable(tIndex).getRowInOrder(rIndex).getCell(cIndex).setVal(stCo);
                        done = true;
                    }
                }
                else{
                    GUI.getBase(dbIndex).getTable(tIndex).getRowInOrder(rIndex).getCell(cIndex).setVal(stCo);
                    done = true;
                }
            }
            else if (typeEntered.equals("Character")){
                Character stC = new Character(newVal.charAt(0));
                GUI.getBase(dbIndex).getTable(tIndex).getRowInOrder(rIndex).getCell(cIndex).setVal(stC);
                done = true;
            }
            else{
                GUI.getBase(dbIndex).getTable(tIndex).getRowInOrder(rIndex).getCell(cIndex).setVal(newVal);
                done = true;
            }
            
            if (done){
                TGUI.addColumn();
                TGUI.disableGUI(false);
                dispose();
            }
        }
        catch (Exception ex){
            WarnLabel.setText("Невірний формат даних!");
        }
    }//GEN-LAST:event_ConfirmButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        // TODO add your handling code here:
        TGUI.disableGUI(false);
        dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(int dbInd, int tInd, int cInd, int rInd) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CellDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CellDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CellDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CellDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dbIndex = dbInd;
                tIndex = tInd;
                cIndex = cInd;
                rIndex = rInd;
                inp = "Тип даних: ";
                typeEntered = GUI.getBase(dbIndex).getTable(tIndex).getAttrInOrder(cIndex).getTypeEntered();
                CellDialog dialog = new CellDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                ValueField.setText(GUI.getBase(dbIndex).getTable(tIndex).getRowInOrder(rIndex).getCell(cIndex).getVal().toString());
                DataTypeLabel.setText(inp + typeEntered);
                if (typeEntered.equals("Color")){
                    DataTypeLabel.setText(inp + typeEntered + "; Формат вводу: rrr, ggg, bbb");
                }
                dialog.setVisible(true);
            }
        });
    }

    private static int dbIndex;
    private static int tIndex;
    private static int cIndex;
    private static int rIndex;
    private static String inp;
    private static String typeEntered;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton ConfirmButton;
    private static javax.swing.JLabel DataTypeLabel;
    private javax.swing.JLabel HeadLabel;
    private static javax.swing.JTextField ValueField;
    private javax.swing.JLabel ValueLabel;
    private javax.swing.JLabel WarnLabel;
    // End of variables declaration//GEN-END:variables
}
