/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ITLMPack;

import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Marina Nik
 */
public class TGUI extends javax.swing.JFrame {

    /**
     * Creates new form TGUI
     */
    public TGUI(int indB, int indT) {
        initComponents();setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        tableModel = new DefaultTableModel();
        for (int i = 0; i < GUI.getBase(indB).getTable(indT).attrNum(); i++){
            tableModel.addColumn(GUI.getBase(indB).getTable(indT).getAttr(i).name);
        }
        for (int i = 0; i < GUI.getBase(indB).getTable(indT).rowNum(); i++){
            tableModel.addRow(new Object[]{});
            for (int j = 0; j < GUI.getBase(indB).getTable(indT).attrNum(); j++){
                tableModel.setValueAt(GUI.getBase(indB).getTable(indT).getRow(i).getCell(j).getVal(), i, j);
            }
        }
        jTable.setModel(tableModel);
        revalidate();
        repaint();
    }

    public void show(int indB, int indT){
        tableModel = new DefaultTableModel();
        for (int i = 0; i < GUI.getBase(indB).getTable(indT).attrNum(); i++){
            tableModel.addColumn(GUI.getBase(indB).getTable(indT).getAttrInOrder(i).name);
        }
        for (int i = 0; i < GUI.getBase(indB).getTable(indT).rowNum(); i++){
            tableModel.addRow(new Object[]{});
            for (int j = 0; j < GUI.getBase(indB).getTable(indT).attrNum(); j++){
                tableModel.setValueAt(GUI.getBase(indB).getTable(indT).getRowInOrder(i).getCell(j).getVal(), i, j);
            }
        }
        jTable.setModel(tableModel);
        revalidate();
        repaint();
        setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddRButton = new javax.swing.JButton();
        DelRButton = new javax.swing.JButton();
        AddCButton = new javax.swing.JButton();
        DelCButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        InfoPane = new javax.swing.JTextPane();
        GoToColumnButton = new javax.swing.JButton();
        GoToCellButton = new javax.swing.JButton();
        ReturnButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AddRButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        AddRButton.setText("Додати рядок");
        AddRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddRButtonActionPerformed(evt);
            }
        });

        DelRButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        DelRButton.setText("Видалити рядок");
        DelRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelRButtonActionPerformed(evt);
            }
        });

        AddCButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        AddCButton.setText("Додати стовпець");
        AddCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCButtonActionPerformed(evt);
            }
        });

        DelCButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        DelCButton.setText("Видалити стовпець");
        DelCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelCButtonActionPerformed(evt);
            }
        });

        jTable.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable);

        InfoPane.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(InfoPane);

        GoToColumnButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        GoToColumnButton.setText("Редагувати стовпець");
        GoToColumnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoToColumnButtonActionPerformed(evt);
            }
        });

        GoToCellButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        GoToCellButton.setText("Редагувати клітину");
        GoToCellButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoToCellButtonActionPerformed(evt);
            }
        });

        ReturnButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        ReturnButton.setText("Повернутися до бази");
        ReturnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddRButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DelRButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddCButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DelCButton, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(GoToColumnButton, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                    .addComponent(GoToCellButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ReturnButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DelCButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AddCButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DelRButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AddRButton, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GoToColumnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GoToCellButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ReturnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddRButtonActionPerformed
        // TODO add your handling code here:
        if (isGUIActive){
            InfoPane.setText(inp + "\n\nВікно стовпця або клітини має бути закрите!");
        }
        else if (GUI.getBase(inB).getTable(inT).attrNum() == 0){
            InfoPane.setText(inp + "\n\nТаблиця має містити хоча б один стовпець!");
        }
        else{
            GUI.getBase(inB).getTable(inT).addRow();
            show(inB, inT);
        }
    }//GEN-LAST:event_AddRButtonActionPerformed

    private void DelRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelRButtonActionPerformed
        // TODO add your handling code here:
        if (isGUIActive){
            InfoPane.setText(inp + "\n\nВікно стовпця або клітини має бути закрите!");
        }
        else if (GUI.getBase(inB).getTable(inT).rowNum() == 0){
            InfoPane.setText(inp + "\n\nТаблиця має містити хоча б один рядок!");
        }
        else{
            //tableModel.removeRow(jTable.getSelectedRow());
            GUI.getBase(inB).getTable(inT).delRowInOrder(jTable.getSelectedRow());
            show(inB, inT);
        }
    }//GEN-LAST:event_DelRButtonActionPerformed

    private void AddCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCButtonActionPerformed
        // TODO add your handling code here:
        if (isGUIActive){
            InfoPane.setText(inp + "\n\nВікно стовпця або клітини має бути закрите!");
        }
        else{
            isGUIActive = true;
            AttrDialog.main(true, inB, inT, GUI.getBase(inB).getTable(inT).attrNum());
        }
    }//GEN-LAST:event_AddCButtonActionPerformed

    private void DelCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelCButtonActionPerformed
        // TODO add your handling code here:
        if (isGUIActive){
            InfoPane.setText(inp + "\n\nВікно стовпця або клітини має бути закрите!");
        }
        else if (GUI.getBase(inB).getTable(inT).attrNum() == 0){
            InfoPane.setText(inp + "\n\nТаблиця має містити хоча б один стовпець!");
        }
        else{
            GUI.getBase(inB).getTable(inT).delAttrInOrder(jTable.getSelectedColumn());
            show(inB, inT);
        }
    }//GEN-LAST:event_DelCButtonActionPerformed

    private void GoToColumnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoToColumnButtonActionPerformed
        // TODO add your handling code here:
        if (isGUIActive){
            InfoPane.setText(inp + "\n\nВікно стовпця або клітини має бути закрите!");
        }
        else{
            isGUIActive = true;
            AttrDialog.main(false, inB, inT, GUI.getBase(inB).getTable(inT).getAttrInOrder(jTable.getSelectedColumn()).getIndex());
        }
    }//GEN-LAST:event_GoToColumnButtonActionPerformed

    private void GoToCellButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoToCellButtonActionPerformed
        // TODO add your handling code here:
        if (isGUIActive){
            InfoPane.setText(inp + "\n\nВікно стовпця або клітини має бути закрите!");
        }
        else{
            isGUIActive = true;
            CellDialog.main(inB, inT, jTable.getSelectedColumn(), jTable.getSelectedRow());
        }
    }//GEN-LAST:event_GoToCellButtonActionPerformed

    private void ReturnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnButtonActionPerformed
        // TODO add your handling code here:
        if (isGUIActive){
            InfoPane.setText(inp + "\n\nВікно стовпця або клітини має бути закрите!");
        }
        else{
            DBGUI.disableGUI(false);
            dispose();
        }
    }//GEN-LAST:event_ReturnButtonActionPerformed

    public static void addColumn(){
        tableModel = new DefaultTableModel();
        for (int i = 0; i < GUI.getBase(inB).getTable(inT).attrNum(); i++){
            tableModel.addColumn(GUI.getBase(inB).getTable(inT).getAttrInOrder(i).name);
        }
        for (int i = 0; i < GUI.getBase(inB).getTable(inT).rowNum(); i++){
            tableModel.addRow(new Object[]{});
            for (int j = 0; j < GUI.getBase(inB).getTable(inT).attrNum(); j++){
                tableModel.setValueAt(GUI.getBase(inB).getTable(inT).getRowInOrder(i).getCell(j).getVal(), i, j);
            }
        }
        jTable.setModel(tableModel);
    }
    
    public static void disableGUI(boolean contr){
        isGUIActive = contr;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(int indB, int indT) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TGUI(indB, indT).setVisible(true);
                inp = "База даних:\nНазва: " + GUI.getBase(indB).name + "\nОпис: "
                    + GUI.getBase(indB).descript + "\nНомер: " + GUI.getBase(indB).getIndex()
                        + "\n\nТаблиця:\nНазва:" + GUI.getBase(indB).getTable(indT).name + "\nНомер: "
                        + GUI.getBase(indB).getTable(indT).getIndex();
                InfoPane.setText(inp);
                inB = indB;
                inT = indT;
            }
        });
    }

    private static String inp = ""; 
    
    private static int inB;
    private static int inT;
    
    private static Row curRow;
    private static Attribute curAttr;
    private static Cell curCell;
    
    private static DefaultTableModel tableModel;
    
    private static boolean isGUIActive = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCButton;
    private javax.swing.JButton AddRButton;
    private javax.swing.JButton DelCButton;
    private javax.swing.JButton DelRButton;
    private javax.swing.JButton GoToCellButton;
    private javax.swing.JButton GoToColumnButton;
    private static javax.swing.JTextPane InfoPane;
    private javax.swing.JButton ReturnButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
